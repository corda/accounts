buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda'
        }
        mavenLocal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

jar.baseName = "accounts-sdk-flows"

cordapp {
    info {
        name "Accounts SDK - Flows"
        vendor "Corda Open Source"
        targetPlatformVersion 4
        minimumPlatformVersion 4
    }
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda integration dependencies
    cordaCompile ("$corda_release_group:corda-core:$corda_release_version"){
        changing = true
    }
    cordaCompile ("$corda_release_group:corda-node:$corda_release_version"){
        changing = true
    }

    //contracts and states dependency
    cordapp project(":states-and-contracts")


    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"

}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
