apply plugin: 'org.springframework.boot'

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


dependencies {
    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"
    compile "$corda_release_group:corda-jackson:$corda_release_version"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // CorDapp dependencies.
    compile project(":cordapp-sweepstake")
    compile project(":flows")
    compile project(":states-and-contracts")

    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.2.RELEASE') {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "$corda_release_group:corda-rpc:$corda_release_version"
    implementation project(":cordapp-sweepstake")

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"

}

springBoot {
    mainClassName = "net.corda.accounts.cordapp.client.webserver.ApplicationKt"
}

task runPartyAServer(type: JavaExec, dependsOn: jar) {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.corda.accounts.cordapp.client.webserver.ApplicationKt"
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
