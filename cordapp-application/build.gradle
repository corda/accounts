apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    info {
        name "World Cup Sweepstake App"
        vendor "Corda Open Source"
        targetPlatformVersion 4
        minimumPlatformVersion 4
    }
}

dependencies {
    cordapp project(":workflows")
    cordapp project(":contracts")
    cordapp project(":cordapp-sweepstake")

    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"

    cordapp "$tokens_sdk:contract:$tokens_sdk_version"
    cordapp "$tokens_sdk:workflow:$tokens_sdk_version"
    cordapp "$tokens_sdk:money:$tokens_sdk_version"

    implementation "$corda_release_group:corda-rpc:$corda_release_version"
    implementation "$corda_release_group:corda-jackson:$corda_release_version"

    implementation("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.2.RELEASE') {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":workflows")
        cordapp project(":contracts")
        cordapp project(":cordapp-sweepstake")
    }

    directory "./build/nodes"
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10000
        sshdPort 2222
        rpcSettings {
            address("localhost:10001")
            adminAddress("localhost:10002")
        }
    }
    node {
        name "O=Tournament,L=London,C=GB"
        p2pPort 10004
        sshdPort 2223
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10006")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=TournamentAuthority,L=London,C=GB"
        p2pPort 10007
        sshdPort 2224
        rpcSettings {
            address("localhost:10008")
            adminAddress("localhost:10009")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}
